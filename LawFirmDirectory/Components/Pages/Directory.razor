@page "/Directory"
@rendermode InteractiveServer
@using LawFirmDirectory.Data
@using Microsoft.AspNetCore.Authorization
@using System.Diagnostics;
@inject AppDBContext dbContext
@attribute [Authorize(Roles = "Administrator,User")]

<PageTitle>Directory</PageTitle>

<h1>Attorney Directory</h1>

@foreach (var att in Attorneys){
	<div class="container">
		<h3>@att.FirstName @att.LastName </h3>
		<p>@att.Email</p>
		<p>@att.Phone</p>


	<AuthorizeView Roles="Administrator">
        <Authorized Context="context2">
			<EditForm
			Model="@att"
			FormName="@($"DeleteAttorney-{att.AttorneyId}")"
			OnValidSubmit="@(() => { DeleteAttorney(att.AttorneyId); })"
			>
				<button type="submit">Delete</button>
			</EditForm>
		</Authorized>	
	</AuthorizeView>

	</div>
}


@code {
	List<Attorney> Attorneys = new List<Attorney>();

	protected override async Task OnInitializedAsync() {
		Attorneys = await dbContext.GetAllAttorneys();
	}

	private async void DeleteAttorney(int attorneyId){
		if (attorneyId > 0){
			var deleteAttorney = dbContext.Attorneys.First(a => a.AttorneyId == attorneyId);
			dbContext.Attorneys.Remove(deleteAttorney);
			await dbContext.SaveChangesAsync();
		}
	}
}